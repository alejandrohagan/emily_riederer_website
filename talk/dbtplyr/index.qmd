---
title: "Operationalizing Column-Name Contracts with dbtplyr"
description: An exploration of how data producers and consumers can use column names as interfaces, configuations, and code to improve data quality and discoverability. The second half of the talk demonstrates how to implement these ideas with my `dbtplyr` dbt package. 
location: dbt Labs Coalesce (2021) | NYR (2023) | posit::conf(2023)
image: featured.png
categories: [workflow, rmarkdown, rstats]
date: 2023-09-21
---

url_video: ""

:::{.panel-tabset}

## Quick Links

At Coalesce for dbt user audience:

<span><i class = 'bi bi-file-bar-graph'></i> [Slides](slides.pdf) </span>    
<span><i class = 'bi bi-play'></i> [Video](https://www.getdbt.com/coalesce-2021/operationalizing-columnname-contracts-with-dbtplyr/) </span> 

At posit::conf for R user audience: 

<span><i class = 'bi bi-file-bar-graph'></i> [Slides](slides-posit.pdf) </span>    
<span><i class = 'bi bi-play'></i> Video - posit::conf for R User Audience *coming soon!* </span>

<span><i class = 'bi bi-pencil'></i> [Post - Column Name Contracts](/post/column-name-contracts/) </span>    
<span><i class = 'bi bi-pencil'></i> [Post - Column Name Contracts in dbt](/post/convo-dbt/) </span>    
<span><i class = 'bi bi-pencil'></i> [Post - Column Name Contracts with dbtplyr](/post/convo-dbt-update/) </span>    

## Abstract 

Complex software systems make performance guarantees through documentation and unit tests, and they communicate these to users with conscientious interface design.

However, published data tables exist in a gray area; they are static enough not to be considered a “service” or “software”, yet too raw to earn attentive user interface design. This ambiguity creates a disconnect between data producers and consumers and poses a risk for analytical correctness and reproducibility.

In this talk, I will explain how controlled vocabularies can be used to form contracts between data producers and data consumers. Explicitly embedding meaning in each component of variable names is a low-tech and low-friction approach which builds a shared understanding of how each field in the dataset is intended to work.

Doing so can offload the burden of data producers by facilitating automated data validation and metadata management. At the same time, data consumers benefit by a reduction in the cognitive load to remember names, a deeper understanding of variable encoding, and opportunities to more efficiently analyze the resulting dataset. After discussing the theory of controlled vocabulary column-naming and related workflows, I will illustrate these ideas with a demonstration of the {dbtplyr} dbt package which helps analytics engineers get the most value from controlled vocabularies by making it easier to effectively exploit column naming structures while coding.

## Slides

<div id='slides' style="width:100%; aspect-ratio:16/11;">
<embed src="slides.pdf#zoom=Fit" width="100%" height = "100%"/>
</div>

## Video

Coming Soon!

:::


